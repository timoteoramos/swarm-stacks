version: "3"
services:
  traefik:
    image: traefik:latest
    command:
      - --providers.docker
      - --providers.docker.constraints=Label(`traefik.constraint-label`, `traefik-public`)
      - --providers.docker.exposedbydefault=false
      - --providers.docker.swarmmode
      - --entrypoints.http=true
      - --entrypoints.http.address=:80
      - --entrypoints.http.http.redirections.entrypoint.to=https
      - --entrypoints.http.http.redirections.entrypoint.scheme=https
      - --entrypoints.https=true
      - --entrypoints.https.address=:443
      - --certificatesResolvers.letsencrypt.acme.email=youremail@example.org
      - --certificatesResolvers.letsencrypt.acme.storage=/etc/traefik/acme.json
      - --certificatesResolvers.letsencrypt.acme.httpChallenge.entryPoint=http
      - --accesslog
      - --log
      - --api
    environment:
      - TZ
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_config:/etc/traefik
    ports:
      - 80:80
      - 443:443
    networks:
      - public
    deploy:
      placement:
        constraints:
          - node.labels.frontend == true

  agent:
    image: portainer/agent:latest
    environment:
      - TZ
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - default
    deploy:
      mode: global
      placement:
        constraints:
          - node.platform.os == linux

  portainer:
    image: portainer/portainer-ce:latest
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    environment:
      - TZ
    volumes:
      - portainer_data:/data
    networks:
      - default
      - public
    deploy:
      placement:
        constraints:
          - node.role == manager
          - node.labels.frontend == true
      labels:
        - traefik.enable=true
        - traefik.docker.network=public
        - traefik.constraint-label=traefik-public
        - traefik.http.services.portainer.loadbalancer.server.port=9000
        - traefik.http.routers.portainer.rule=Host(`portainer.example.org`)
        - traefik.http.routers.portainer.service=portainer
        - traefik.http.routers.portainer.entrypoints=https
        - traefik.http.routers.portainer.tls=true
        - traefik.http.routers.portainer.tls.certresolver=letsencrypt
        - traefik.http.services.edge.loadbalancer.server.port=8000
        - traefik.http.routers.edge.rule=Host(`edge.example.org`)
        - traefik.http.routers.edge.service=edge
        - traefik.http.routers.edge.entrypoints=https
        - traefik.http.routers.edge.tls=true
        - traefik.http.routers.edge.tls.certresolver=letsencrypt

networks:
  default:
    driver: overlay

  public:
    external: true

volumes:
  portainer_data:
    driver: local

  traefik_config:
    driver: local
